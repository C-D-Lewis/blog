{
  "title": "RPi: HC-SR04 Ultrasonic Sensor mini-project",
  "fileName": "0038-RPi-HC-SR04-Ultrasonic-Sensor-mini-project.md",
  "dateTime": "2013-07-16 22:50:08",
  "tags": [
    "Raspberry Pi"
  ],
  "components": [
    {
      "type": "paragraph",
      "text": "<strong>In an almost biblical revelation, I have found it IS indeed possible to post source code in a proper fashion on Wordpress, making a virtual mockery of my Pebble SDK Tutorial pages, which I might update, but not for now. The code segments are available in source links in each post. "
    },
    {
      "type": "paragraph",
      "text": "So, what better reason to make a new post using this newly discovered feature than to write about my latest Raspberry Pi escapade. I have a cheap <a title=\"HCSR04\" href=\"http://letsmakerobots.com/node/30209\">HC-SR04 ultrasonic sensor</a> that I used with an Ultrasonic library with my Arduino. Having since obtained a Pi, why not have it work with this new piece of kit?"
    },
    {
      "type": "paragraph",
      "text": "After observing the <a title=\"Timing Requirements (Page 2)\" href=\"http://jaktek.com/wp-content/uploads/2011/12/HC-SR04.pdf\">timing requirements</a>, it seemed simple enough to replicate that behavior with a short C program, shown below in all it's copyable glory!"
    },
    {
      "type": "paragraph",
      "text": "<!-- language=\"cpp\" -->\n<pre><div class=\"code-block\">\n#include <stdio.h>\n#include <stdlib.h>\n#include <wiringPi.h>\n\n#define TRUE 1\n\n#define TRIG 5\n#define ECHO 6\n\nvoid setup() {\n        wiringPiSetup();\n        pinMode(TRIG, OUTPUT);\n        pinMode(ECHO, INPUT);\n\n        //TRIG pin must start LOW\n        digitalWrite(TRIG, LOW);\n        delay(30);\n}\n\nint getCM() {\n        //Send trig pulse\n        digitalWrite(TRIG, HIGH);\n        delayMicroseconds(20);\n        digitalWrite(TRIG, LOW);\n\n        //Wait for echo start\n        while(digitalRead(ECHO) == LOW);\n\n        //Wait for echo end\n        long startTime = micros();\n        while(digitalRead(ECHO) == HIGH);\n        long travelTime = micros() - startTime;\n\n        //Get distance in cm\n        int distance = travelTime / 58;\n\n        return distance;\n}\n\nint main(void) {\n        setup();\n\n        printf(\"Distance: %dcm\\n\", getCM());\n\n        return 0;\n}\n</div></pre>"
    },
    {
      "type": "paragraph",
      "text": "Which results in this output:"
    },
    {
      "type": "paragraph",
      "text": "<a href=\"http://ninedof.files.wordpress.com/2013/07/ultrasonic.png\">!<a class=\"link\" target=\"_blank\" href=\"http://ninedof.files.wordpress.com/2013/07/ultrasonic.png?w=545\"></a></a>"
    },
    {
      "type": "paragraph",
      "text": "So now I know the distance to the ceiling!"
    }
  ]
}