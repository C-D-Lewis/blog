{
  "title": "Say Hello to Your New Pin Pusher!",
  "fileName": "0123-Say-Hello-to-Your-New-Pin-Pusher.md",
  "dateTime": "2016-09-11 13:48:25",
  "tags": [
    "Integration",
    "JavaScript",
    "Pebble",
    "Raspberry Pi"
  ],
  "components": [
    {
      "type": "paragraph",
      "text": "<strong>Update: Added changed IP facility details."
    },
    {
      "type": "header",
      "level": 2,
      "text": "Update: Added status watchapp details."
    },
    {
      "type": "paragraph",
      "text": "Two of my Pebble apps push pins to the timeline to enhance their experience beyond the apps themselves:"
    },
    {
      "type": "paragraph",
      "text": "• <a href=\"https://apps.getpebble.com/en_US/application/5387b383f60819963900000e\">News Headlines</a> - Posts the top headline (if it's new) every four hours. Used to push notifications and serve decoded PNG images, but that went away. Maybe someday they will return. But not for now."
    },
    {
      "type": "paragraph",
      "text": "• <a href=\"https://apps.getpebble.com/en_US/application/529e8742d7894b189c000012\">Tube Status</a> - Checks the TFL feed every five minutes, and pushes a pin if there is a change in the delay status. This can be a new delay, a delay that's ended, and 'all clear' (no delays anymore)."
    },
    {
      "type": "paragraph",
      "text": "Both servers also respond to <code>GET /status</code> to show app users if they're up, and this has proved useful when they occasionally went down. Thanks for a 'do node index.js forever' loop script, this is very rarely now an issue."
    },
    {
      "type": "paragraph",
      "text": "Up until now, these pins were served from a $5 Digital Ocean instance which essentially spends 99.9% of its time doing absolutely nothing! After coming back to the UK and making progress towards cancelling subscriptions and emptying my US bank account, I had a better idea - use my dusty Raspberry Pi instead!"
    },
    {
      "type": "paragraph",
      "text": "As part of my new job at EVRYTHNG, a natural avenue of exploration for getting to grips with the IoT is using a Raspberry Pi, which can run Node.js, as it turns out. Perfect! The pin servers for the two apps above use Node.js with Express."
    },
    {
      "type": "paragraph",
      "text": "So after a bit of code/dependency cleanup, I set up both servers on the Pi with <code>screen</code> and put plenty of stickers around warning against turning it off or rebooting the router."
    },
    {
      "type": "paragraph",
      "text": "So far, so good! What could go wrong?"
    },
    {
      "type": "image",
      "description": "",
      "src": "/assets/import/media/2016/09/img_20160911_143438.jpg"
    },
    {
      "type": "header",
      "level": 2,
      "text": "Followup: Checking Status Conveniently"
    },
    {
      "type": "paragraph",
      "text": "Each of the two apps mentioned above have a built-in server monitoring feature in their settings screens, but that's a lot of scrolling. To put my mind at ease I have also created a simple monitoring app that uses the same backend mechanism:"
    },
    {
      "type": "image",
      "description": "",
      "src": "/assets/import/media/2016/09/img_20160911_225459.jpg"
    }
  ]
}