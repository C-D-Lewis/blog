{
  "title": "Spark Core Pins from a Webpage",
  "fileName": "2014-04-07-Spark-Core-Pins-from-a-Webpage.md",
  "dateTime": "2014-04-07 16:12:43",
  "tags": [
    "Integration",
    "JavaScript",
    "Spark Core"
  ],
  "components": [
    {
      "type": "paragraph",
      "text": "Building on the small amount of JavaScript code developed by controlling the Spark Core pins from my Pebble, I decided to write a basic webpage to allow me to perform the same control functions but from a browser. Sure, it's been done before, but as I have no real expertise or experience of JavaScript beyond that used for PebbleKit JS apps, and virtually none at all for HTML, it seemed like a good learning opportunity."
    },
    {
      "type": "paragraph",
      "text": "And it turned out to be easier than expected! After a couple of hours, the basic code was in place. The webpage looks like this:"
    },
    {
      "type": "image",
      "description": "",
      "src": "/assets/import/media/2014/04/jquery-core.png"
    },
    {
      "type": "paragraph",
      "text": "During the aforementioned Pebble project, <a href=\"https://community.spark.io/t/pin-argument-for-spark-function-is-always-0-solved/3794\" title=\"Forum post\">I sought help with a problem</a> in getting the same pin number back as I sent to the Spark Cloud. The solution to this turned out to be specifying the Spark.function() parameter string as a key-value dictionary, making the core (aha) code segment in this webpage as so:"
    },
    {
      "type": "paragraph",
      "text": "<!-- language=\"js\" -->\n<pre><div class=\"code-block\">\n<span class=\"comment\">//Send the request to the Core</span>\nvar sendRequest = <span class=\"js-blueword\">function</span>(pin, on, device_id, access_token) {\n  var url;\n  <span class=\"js-keyword\">if</span>(on) {\n    url = \"https://api.spark.io/v1/devices/\" + device_id + \"/on?access_token=\" + access_token;\n  } <span class=\"js-keyword\">else</span> {\n    url = \"https://api.spark.io/v1/devices/\" + device_id + \"/off?access_token=\" + access_token;\n  }\n\n  <span class=\"js-blueword\">console</span>.log(\"jQuery AJAX: Requesting pin \" + pin + \" \" + (on == true ? \"on\" : \"off\") + \"...\");\n\n<span class=\"comment\">  //Send request using jQuert AJAX</span>\n  $.ajax({\n    type: \"POST\",\n    url: url,\n    data: {\"args\":pin},\n    success: success,\n    dataType: \"json\"\n  });\n};\n</div></pre>"
    },
    {
      "type": "paragraph",
      "text": "The entire project (three files!) can be found on <a title=\"Source code\" href=\"https://github.com/C-D-Lewis/core-pins-js/tree/master\">GitHub here</a>. I may expand it to include more functions in the future, but at the moment it provides a good platform to play around with, and I've learned a small amount about HTML forms and using jQuery. Time well spent!"
    },
    {
      "type": "paragraph",
      "text": "&nbsp;"
    }
  ]
}